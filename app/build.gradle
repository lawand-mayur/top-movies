plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.example.movies"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.2.0-alpha07"
    }
    ndkVersion '20.0.5594570'

    applicationVariants.all { variant ->
        def secureProps = new Properties()
        def securePropertiesFilePath = "../secure.properties"
        if (file(securePropertiesFilePath).exists()) {
            file(securePropertiesFilePath)?.withInputStream { secureProps.load(it) }
        }
        variant.buildConfigField "String", "baseUrl", secureProps.getProperty("base_url") ?: ""
        variant.buildConfigField "String", "apiKey", secureProps.getProperty("api_key") ?: ""
    }


}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    //dagger
    def dagger_version = "2.41"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    def retrofit_version = "2.9.0"
    //Network library
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"

    implementation("androidx.compose.ui:ui:1.1.1")
    // Tooling support (Previews, etc.)
    implementation("androidx.compose.ui:ui-tooling:1.1.1")
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation("androidx.compose.foundation:foundation:1.1.1")
    // Material Design
    implementation("androidx.compose.material:material:1.1.1")
    // Material design icons
    implementation("androidx.compose.material:material-icons-core:1.1.1")
    implementation("androidx.compose.material:material-icons-extended:1.1.1")
    // Integration with observables
    implementation("androidx.compose.runtime:runtime-livedata:1.1.1")

    implementation "androidx.compose.ui:ui-tooling-preview:1.1.1"
    implementation 'androidx.activity:activity-compose:1.4.0'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'

    // UI Tests
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.1.1")


    def nav_version = "2.4.2"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

    implementation("io.coil-kt:coil-compose:2.0.0-rc02")
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0"

    testImplementation "io.mockk:mockk:1.11.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'


}